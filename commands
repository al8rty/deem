Правильная настройка OSPF: на всех устройствах, установить frr и включить  daemons ospf.
На hq-rtr: 
  > включить все интерфейсы всех подсетей;
  > interface tun1
  > ip ospf authentication
  > ip ospf authentication-key password
  > interface ens3
  > ip ospf authentication-key password
router ospf
 network 10.10.0.0/30 area 0    ; сеть туннеля
 network 172.16.4.0/28 area 0   ; сеть к ISP
 network 192.168.1.0/26 area 0  ; ваша внутренняя сеть (пример)
 network 172.16.16.0/28 area 0  ; другая внутренняя сеть (пример)
 passive-interface default
 no passive-interface tun0
 no passive-interface ens3
exit
write

На br-rtr:
  > аналогично включить все интерфейсы;
  > interface tun1
  > ip ospf authentication
  > ip ospf authentication-key mypassword  ; тот же пароль
  > interface ens3
  > ip ospf authentication-key mypassword
router ospf
 network 10.10.0.0/30 area 0    ; сеть туннеля
 network 172.16.5.0/28 area 0   ; сеть к ISP
 network 192.168.2.0/27 area 0  ; ваша внутренняя сеть (пример)
 passive-interface default
 no passive-interface tun0
 no passive-interface ens3
exit
write

На ISP:
router ospf
 no network 10.10.0.0/30 area 0
 network 172.16.4.0/28 area 0
 network 172.16.5.0/28 area 0
 passive-interface default
 no passive-interface ens3  ; интерфейс к hq-rtr
 no passive-interface ens4  ; интерфейс к br-rtr (проверьте имя интерфейса)
exit
write


При настройке chrony, написать в файлк на сервере 
  server 127.0.0.1 iburst prefer 
  local stratum 5
  allow 0/0

  
Насройка Ansible:
- apt install ansible
- sudo su sshuser
- ssh-keygen -t rsa
- ssh-copy-id -p 2024 sshuser@192.168.1.2
- ssh-copy-id user@172.16.10.5
- ssh-copy-id net_admin@172.16.4.2
- ssh-copy-id net_admin@172.16.5.2
- nano /etc/ansible/hosts
Написать в файле: 
[hq]
192.168.1.2 ansible_port=2024 ansible_user=sshuser
172.16.10.5 ansible_user=user
172.16.4.2 ansible_user=net_admin

[br]
172.16.5.2 ansible_user=net_admin

- ansible all -m ping


Настройка mediawiki на debina 10:
- sudo apt update
- sudo apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common
- curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -
- sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/debian buster stable"
- sudo apt update
- sudo apt install -y docker-ce docker-ce-cli containerd.io
- sudo systemctl start docker
- sudo systemctl enable docker
- sudo usermod -aG docker $USER
- sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
- sudo chmod +x /usr/local/bin/docker-compose
- sudo apt git
- git clone https://github.com/al8ty/wik.git
- cd wik
- docker-compose -f wiki.yml up -d


Настройка статических портов на debian 10:
br-rtr:
- sudo sysctl -w net.ipv4.ip_forward=1
- sudo iptables -t nat -A PREROUTING -i ens3 -p tcp --dport 80 -j DNAT --to-destination 192.168.2.2:8080
- sudo iptables -t nat -A PREROUTING -i ens3 -p tcp --dport 2024 -j DNAT --to-destination 192.168.2.2:2024
- sudo iptables -A FORWARD -i ens3 -o ens4 -p tcp --dport 8080 -d 192.168.2.2 -j ACCEPT
- sudo iptables -A FORWARD -i ens3 -o ens4 -p tcp --dport 2024 -d 192.168.2.2 -j ACCEPT
- sudo iptables -A FORWARD -m state --state ESTABLISHED,RELATED -j ACCEPT
- sudo iptables-save > /etc/iptables/rules.v4
  
hq-rtr:
- sudo sysctl -w net.ipv4.ip_forward=1
- sudo iptables -t nat -A PREROUTING -i ens3 -p tcp --dport 2024 -j DNAT --to-destination 192.168.1.2:2024
- sudo iptables -A FORWARD -i ens3 -o ens4 -p tcp --dport 2024 -d 192.168.1.2 -j ACCEPT
- sudo iptables -A FORWARD -m state --state ESTABLISHED,RELATED -j ACCEPT
- sudo iptables-save > /etc/iptables/rules.v4


Настройка moodle на debina 10: 
- sudo apt update
- sudo apt install apache2 -y
- sudo systemctl start apache2
- sudo systemctl enable apache2
- sudo apt install mariadb-server -y
- sudo systemctl start mariadb
- sudo systemctl enable mariadb
- sudo mysql_secure_installation - ввести Enter и потом пароль для root пользователя и после этого везде нажимать Y
- sudo mysql -u root -p
- CREATE DATABASE moodledb CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci;
- CREATE USER 'moodle'@'localhost' IDENTIFIED BY 'P@ssw0rd';
- GRANT ALL PRIVILEGES ON moodledb.* TO 'moodle'@'localhost';
- FLUSH PRIVILEGES;
- EXIT;
- sudo apt install php libapache2-mod-php php-mysql php-gd php-curl php-xml php-mbstring php-zip php-soap php-intl -y
- sudo systemctl restart apache2
- cd /var/www/html
- sudo wget https://download.moodle.org/download.php/direct/stable400/moodle-latest-400.tgz
- sudo tar -xvzf moodle-latest-400.tgz
- sudo chown -R www-data:www-data /var/www/html/moodle
- sudo chmod -R 755 /var/www/html/moodle
- sudo mkdir /var/moodledata
- sudo chown -R www-data:www-data /var/moodledata
- sudo chmod -R 755 /var/moodledata
После настроки привеленгий нужно зайти в moodle и ввести следующие данные: Тип базы: MariaDB.
Имя базы: moodledb.
Пользователь: moodle.
Пароль: P@ssw0rd.


Настройка веб-сервера nginx как обработчика прокси-сервера на hq-rtr:
hq-rtr:
- apt install git nginx
- git clone https://github.com/al8rty/deem.git
- cd deem
- cp moodle.conf /etc/nginx/sites-available/
- sudo ln -s /etc/nginx/sites-available/moodle.conf /etc/nginx/sites-enabled/
br-rtr:
- Аналогично, только файл называется wiki.conf
- sudo ln -s /etc/nginx/sites-available/wiki.conf /etc/nginx/sites-enabled/
- На обоих устройствах:
- sudo nginx -t
- sudo systemctl restart nginx
